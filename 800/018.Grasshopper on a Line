#include <iostream>
using namespace std;

int main() {
    int t;
    cin >> t;
    while (t--) {
        int x, k;
        cin >> x >> k;
        if (x % k != 0) {
            cout << 1 << endl;
            cout << x << endl;
        } else {
            cout << 2 << endl;
            cout << 1 << " " << x - 1 << endl;
        }
    }
    return 0;
}
Note
     When x  is not divisible by k , the grasshopper can reach x  in just one jump.
Otherwise, you can show that two jumps are always enough. For example, jumps 1  and x−1. 
1 is not divisible by any k>1 . Also, x  and x−1  can't be divisible by any k>1  at the same time.
